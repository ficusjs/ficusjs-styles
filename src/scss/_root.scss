@use 'colors';
@use 'spacing';
@use 'typography';
@use 'ui-elements';
@use 'themes';

:root {
  // Main colors
  @each $color, $value in colors.$grays {
    --#{$color}-color: #{$value};
  }
  // Spacings
  @each $spacing, $value in spacing.$spacings {
    --spacing-#{$spacing}: #{$value};
  }
  // Fonts
  @each $font, $value in typography.$font-families {
    --font-#{$font}: #{$value};
  }
  // Font weights
  @each $weight, $value in typography.$font-weights {
    --font-weight-#{$weight}: #{$value};
  }
  // Typography
  @each $size, $value in typography.$font-size-scale {
    --#{$size}-font-size: #{$value};
  }
  // Line heights
  @each $line-height, $value in typography.$line-heights {
    --#{$line-height}: #{$value};
  }
  // Icons
  @each $icon, $value in ui-elements.$icons {
    --icon-#{$icon}: #{$value};
  }
  // Border radius
  @each $border-radius, $value in ui-elements.$ui-border-radius {
    --#{$border-radius}: #{$value};
  }
}

// Prefered color scheme
// Sets the theme based on system color preference
// ---------------------

@media (prefers-color-scheme: light) {
  :root {
    @each $custom-property, $color in map-get(themes.$themes, light) {
      --#{$custom-property}: #{$color};
    }
  }
}

@media (prefers-color-scheme: dark) {
  :root {
    @each $custom-property, $color in map-get(themes.$themes, dark) {
      --#{$custom-property}: #{$color};
    }
  }
}

// Themes
// Adds custom properties to the `data-theme` attribute.
// ------

@each $theme-name, $theme-values in themes.$themes {
  html[data-theme="#{$theme-name}"] {
    @each $custom-property, $color in $theme-values {
      --#{$custom-property}: #{$color};
    }
  }
}
